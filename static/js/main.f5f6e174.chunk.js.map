{"version":3,"sources":["components/Tempapp.js","App.js","reportWebVitals.js","index.js"],"names":["Tempapp","useState","city","setCity","search","setSearch","inputRef","useRef","useEffect","a","url","fetch","response","json","resJson","console","log","main","fetchApi","current","focus","className","ref","type","onChange","event","target","value","temp","temp_min","temp_max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA8DeA,G,MA5DC,WAAO,IAAD,EACGC,mBAAS,MADZ,mBACdC,EADc,KACRC,EADQ,OAEOF,mBAAS,WAFhB,mBAEdG,EAFc,KAENC,EAFM,KAIfC,EAAWC,iBAAO,MAkBxB,OAhBAC,qBAAU,YACK,uCAAG,gCAAAC,EAAA,6DACVC,EADU,2DACgDN,EADhD,iEAEOO,MAAMD,GAFb,cAEVE,EAFU,gBAIMA,EAASC,OAJf,OAIVC,EAJU,OAKhBC,QAAQC,IAAIF,GACZX,EAAQW,EAAQG,MANA,2CAAH,qDASdC,KACE,CAACd,IAEJI,qBAAU,WACTF,EAASa,QAAQC,UACf,IAEF,mCACC,sBAAKC,UAAU,MAAf,UACC,qBAAKA,UAAU,YAAf,SACC,uBACCC,IAAKhB,EACLiB,KAAK,SAELF,UAAU,aACVG,SAAU,SAACC,GACVpB,EAAUoB,EAAMC,OAAOC,YAKxBzB,EAGD,gCACC,sBAAKmB,UAAU,OAAf,UACC,qBAAIA,UAAU,WAAd,UACC,mBAAGA,UAAU,uBACZjB,KAEF,qBAAIiB,UAAU,OAAd,UAAsBnB,EAAK0B,KAA3B,aACA,qBAAIP,UAAU,cAAd,kBACOnB,EAAK2B,SADZ,oBACoC3B,EAAK4B,SADzC,gBAID,qBAAKT,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBAfhB,mBAAGA,UAAU,WAAb,mCChCUU,MAJf,WACC,OAAO,cAAC,EAAD,KCOOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5f6e174.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\nconst Tempapp = () => {\r\n\tconst [city, setCity] = useState(null);\r\n\tconst [search, setSearch] = useState(\"Navsari\");\r\n\r\n\tconst inputRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchApi = async () => {\r\n\t\t\tconst url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=4d508bbb87de160a45da321099189bbc`;\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\t// console.log(response);\r\n\t\t\tconst resJson = await response.json();\r\n\t\t\tconsole.log(resJson);\r\n\t\t\tsetCity(resJson.main);\r\n\t\t};\r\n\r\n\t\tfetchApi();\r\n\t}, [search]);\r\n\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus();\r\n\t}, []);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"box\">\r\n\t\t\t\t<div className=\"inputData\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\t\t// value={search}\r\n\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tsetSearch(event.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{!city ? (\r\n\t\t\t\t\t<p className=\"errorMsg\"> No Data Found</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t\t<h2 className=\"location\">\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-street-view\"></i>\r\n\t\t\t\t\t\t\t\t{search}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<h1 className=\"temp\">{city.temp}°Cel</h1>\r\n\t\t\t\t\t\t\t<h3 className=\"tempmin_max\">\r\n\t\t\t\t\t\t\t\tMin :{city.temp_min} °Cel | Max : {city.temp_max}°Cel\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"wave -one\"></div>\r\n\t\t\t\t\t\t<div className=\"wave -two\"></div>\r\n\t\t\t\t\t\t<div className=\"wave -three\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Tempapp;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Tempapp from \"./components/Tempapp\";\n\nfunction App() {\n\treturn <Tempapp />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}